[project]
name = "wildlife-streaming-e2e"
version = "0.1.0"
description = "Project demonstrating a streaming end-to-end application for wild animals collar tracking system"
readme = "README.md"
requires-python = ">=3.11,<3.13"

dependencies = [
    "backend",
    "orchestrator",
    "frontend",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "ruff>=0.12.0",
    "plotly>=6.2.0",
    "pydeck>=0.9.1",
]

[tool.uv.sources]
backend = { path = "backend" }
orchestrator = { path = "orchestrator" }
frontend = { path = "frontend" }

[tool.black]
target-version = ["py313"]
include = '\.pyi?$'

[tool.ruff]
fix = true
output-format = "github"
target-version = "py313"

lint.ignore = [
    # Line too long (E501)
    # 1. black does not format comments
    #    https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#comments
    # 2. long links in doc strings are an issue
    "E501",
    # flake8-builtins
    # the likelihood of running into an issue when shadowing a buildin
    # with a class attribute is very low
    "A003",
    # Limiting the length of error messages isn't particularly useful
    "TRY003",
    "TRY002",
    "G004",
]
lint.select = [
    "A",   # flake8-builtin"
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90", # mccabe
    "E",   # flake8
    "ERA", # eradicate
    "F",   # Pyflakes
    "G",   # flake8-logging-format
    "I",   # isort
    "N",   # pep8-naming
    "RUF", # ruff
    "UP",  # pyupgrade
    "TRY", # tryceratops
    "T10", # flake8-debugger
]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
]

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true
show_error_codes = true
ignore_missing_imports = true
disallow_any_unimported = false
exclude = '^(migrations|build|egg-info|.venv)/'



[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.dagster]
module_name = "orchestrator.definitions"
