# Use a Python image with uv pre-installed
FROM python:3.11-slim

COPY --from=ghcr.io/astral-sh/uv:0.8.0 /uv /uvx /bin/

# Install the project into `/app`
WORKDIR /app

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Install the project's dependencies using the lockfile and settings
COPY frontend/pyproject.toml frontend/uv.lock ./

RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked --no-install-project --no-dev

COPY frontend/ ./frontend

RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked --no-dev

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Reset the entrypoint, don't invoke `uv`
ENTRYPOINT []

# Expose the Streamlit port
EXPOSE 8503

CMD [ "streamlit", "run", "/app/frontend/main.py", "--server.port", "8503"]
